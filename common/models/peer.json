{
  "name": "peer",
  "base": "PersistedModel",
  "idInjection": true,
  "options": {
    "validateUpsert": true,
    "caseSensitiveEmail": true,
    "emailVerificationRequired": true
  },
  "mixins": {
    "HasOne": {
      "relations": [
        {
          "model": "profile",
          "hasManyRelation": "profiles",
          "autoCreate": true
        }
      ]
    },
    "PatchMany": {
      "relations": [
        {
          "model": "topic",
          "hasManyRelation": "topicsLearning"
        },
        {
          "model": "topic",
          "hasManyRelation": "topicsTeaching"
        }
      ]
    },
    "TimeStamp": {
      "createdAt": "createdAt",
      "updatedAt": "updatedAt",
      "required": false
    },
    "GlobalUtils": {}
  },
  "hidden": [
    "password",
    "verificationToken"
  ],
  "properties": {
    "id": {
      "type": "string",
      "required": true
    },
    "username": {
      "type": "string"
    },
    "password": {
      "type": "string",
      "required": true
    },
    "email": {
      "type": "string"
    },
    "phone": {
      "type": "number"
    },
    "phoneVerified": {
      "type": "boolean",
      "default": false
    },
    "emailVerified": {
      "type": "boolean",
      "default": false
    },
    "phoneVerificationToken": {
      "type": "string"
    },
    "verificationToken": {
      "type": "string"
    },
    "accountVerified": {
      "type": "boolean",
      "default": false
    },
    "verificationIdUrl": {
      "type": "string"
    }
  },
  "validations": [],
  "relations": {
    "userTokens": {
      "type": "hasMany",
      "model": "UserToken",
      "foreignKey": "userId",
      "options": {
        "disableInclude": true
      }
    },
    "identities": {
      "type": "hasMany",
      "model": "userIdentity",
      "foreignKey": "userId"
    },
    "credentials": {
      "type": "hasMany",
      "model": "userCredential",
      "foreignKey": "userId",
      "options": {
        "disableInclude": true
      }
    },
    "topicsLearning": {
      "type": "hasMany",
      "model": "topic",
      "foreignKey": "sourceId",
      "through": "peer_has_topiclearning",
      "keyThrough": "targetId"
    },
    "topicsTeaching": {
      "type": "hasMany",
      "model": "topic",
      "foreignKey": "sourceId",
      "through": "peer_has_topicteaching",
      "keyThrough": "targetId"
    },
    "communities": {
      "type": "hasMany",
      "model": "community",
      "foreignKey": "targetId",
      "through": "community_has_member",
      "keyThrough": "sourceId"
    },
    "ownedCommunities": {
      "type": "hasMany",
      "model": "community",
      "foreignKey": "sourceId",
      "through": "peer_has_community",
      "keyThrough": "targetId"
    },
    "collections": {
      "type": "hasMany",
      "model": "collection",
      "foreignKey": "sourceId",
      "through": "collection_has_participant",
      "keyThrough": "targetId"
    },
    "ownedCollections": {
      "type": "hasMany",
      "model": "collection",
      "foreignKey": "sourceId",
      "through": "peer_has_collection",
      "keyThrough": "targetId"
    },
    "following": {
      "type": "hasMany",
      "model": "peer",
      "foreignKey": "sourceId",
      "through": "peer_has_following",
      "keyThrough": "targetId"
    },
    "contact": {
      "type": "hasMany",
      "model": "contact",
      "foreignKey": "sourceId",
      "through": "peer_has_contact",
      "keyThrough": "targetId"
    },
    "profiles": {
      "type": "hasMany",
      "model": "profile",
      "foreignKey": "sourceId",
      "through": "peer_has_profile",
      "keyThrough": "targetId"
    },
    "invites": {
      "type": "hasMany",
      "model": "peer_invite",
      "foreignKey": "sourceId",
      "through": "peer_has_invited",
      "keyThrough": "targetId"
    },
    "joinedrooms": {
      "type": "hasMany",
      "model": "room",
      "foreignKey": "sourceId",
      "through": "peer_has_joinedroom",
      "keyThrough": "targetId"
    },
    "transactions": {
      "type": "hasMany",
      "model": "transaction",
      "foreignKey": "sourceId",
      "through": "peer_has_transaction",
      "keyThrough": "targetId"
    },
    "stripeaccs": {
      "type": "hasMany",
      "model": "stripeacc",
      "foreignKey": "sourceId",
      "through": "peer_has_stripeacc",
      "keyThrough": "targetId"
    },
    "notifications": {
      "type": "hasMany",
      "model": "notification",
      "foreignKey": "sourceId",
      "through": "peer_has_notification",
      "keyThrough": "targetId"
    }
  },
  "acls": [],
  "methods": {}
}